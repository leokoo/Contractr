c
bid
@job.bids.where(status: 1)
Bid.where(status: 1)
Bid.all
@job.bids.where(status: 1)
c
Job.all
c
job.bids.where(status: 0)
c
job.bids.where(status: 0)
c
job.bids.where(status: 0)
c
job.bids.where(status: 0)
c
Bid.where(status: 1)
@job
@job.bids.where(status: 1)
c
@job.bids.where(status: 1)
Bid.where(status: 1)
c
exit
bid
@job.bid
@job.bids.user_id
@job.bids.user.name
@job.bids.user
@job.bids
@job
c
@job.status
c
Bid.where(status:0)
c
Bid.where(status:0)
Bid(where(status:0)
c
Bid.all
c
bid
c
bid
c
bid
c
bid
c
Bid.all
c
 f.hidden_field :status, value: 1
 f.hidden_field :status
@job
f
c
bid.job
bid
c
Job.all
c
@job
c
bid.user_id == current_user.id
current_user.id
bid.user_id
c
current_user.id
bid.user_id
bid
c
@job.user_id == current_user.id
@job.user_id
@job
c
current_user.id
current_user
bid.user.id
bid
c
jobs_path
root_path
job_path
c
@job.bids.where(user_id: current_user.id)
@job.bids.where(user_id: 2)
@job.bids.where(user_id = 2)
@job.bids(where: 2)
@job.bids(where: user_id: 2)
@job.bids(where user_id: 2)
@job.bids
@job
c
@bid.user_id = current_user.id
@bid = @job.bids.new
@job.bids.new
c
current_user.job.bids.new
@job.bids.new
current_user.job.bids.new
@job.bids.new
c
Bid.all
Bid.destroy_all
bid.destroy
Bid.all
@bid.save
@bid
Bid.create
@bid
@bid.create
@bid
@bid.user_id = current_user.id
@job.bids.n
@job
@job.bids.new
@bid
@job
c
Job.find(params[:job_id])
new_job_bid_path
@job
new_job_bid_path
c
job_bids_path
job
c
job
@job
c
@job
c
@job
Bid
current_user.id
current_user
c
Job.bids
Job.all
current_user.bids
current_user.jobs
@job
current_user
@bid
c
@job.user
@user
@job.bids
@job.user
c
bid.job
Bid
Job
job
@job
bid
c
@job.pay_offer
@job.bids
@job.name
c
Job.all
@job.name
c
@job
c
job.id
job.path
job.id
job
Job.id
job
c
current_user.id
user.id
c
gravatar_id = Digest::MD5::hexdigest(user.email).downcase
user.image
if user.image
user.image
gravatar_id = Digest::MD5::hexdigest(user.email).downcase
gravatar_id
c
https://www.gravatar.com/avatar/#{gravatar_id}.jpg?d=identical&s=150
gravatar_id = Digest::MD5::hexdigest(user.email).downcase
c
@user.errors
request.env["omniauth.auth"].info.email
request.env["omniauth.auth"]
@user
n
exit
env["omniauth.auth"].info.email
auth.info.email
@user.errors.full_messages
@user.errors
@user = User.from_omniauth(request.env["omniauth.auth"])
env["omniauth.auth"]
omniauth.auth
c
@user = User.from_omniauth(request.env["omniauth.auth"])
c
User.all
User.destroy_all
User.all
@user = User.from_omniauth(request.env["omniauth.auth"])
c
@user = User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
@user.persisted
@user = User.from_omniauth
(request.env["omniauth.auth"])
User.from_omniauth(request.env["omniauth.auth"])
@user
@user.email="allal@sadsad.com"
@user = User.from_omniauth(request.env["omniauth.auth"])
@user
@user.persisted?@user.email="allal@sadsad.com
@user.persisted
@user
n
c
@user
n
c
n
@user
n
@user
c
@user.persisted?
@user = User.from_omniauth(request.env["omniauth.auth"])
c
@user.persisted?
@user = User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
User.from_omniauth(request.env["omniauth.auth"])
c
@user = User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
@user = User.from_omniauth(request.env["omniauth.auth"])
User.from_omniauth(request.env["omniauth.auth"])
(byebug) User
@user
@user.persisted?
c
User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
c
@user.persisted?
User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
c
User.from_omniauth(request.env["omniauth.auth"])
@user.persisted?
