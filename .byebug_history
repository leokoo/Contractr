c
Vote.exists?(current_user.id)
c
Vote.exists?(current_user.id)
Vote.existsVote.exists?(current_user.id)
@vote
c
@vote.user_id == current_user.id
!!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
c
!!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
c
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
c
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
c
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id))
!(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
(Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id)
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id => current_user.id)
Vote.exists?(:user_id == current_user.id)
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id=>current_user.id)
Vote.exists?(user_id: :current_user.id)
Vote.exists?(current_user.id)
c
Vote.exists?(current_user.id)
c
@vote.user_id == current_user.id
Vote.exists?(current_user.id)
(Vote.exists?(current_user.id) && @vote.user_id == current_user.id)
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
(Vote.exists?(current_user.id) && @vote.user_id = current_user.id)
c
n
c
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
@vote.user_id = nil
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.exists?(current_user.id)
@vote.user_id == current_user.id
Vote.exists?(:user_id => current_user.id)
c
Vote.exists?(:user_id => current_user.id)
(Vote.exists?(:user_id => current_user.id)) && (@vote.user_id == current_user.id)
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
Vote.exists?(:user_id => current_user.id&& @vote.user_id == current_user.id)
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
Vote.exists?(:user_id => current_user.id&& @vote.user_id == current_user.id)
Vote.exists?(:user_id => current_user.id)
c
n
@vote
Vote.exists?(:user_id => current_user.id).user_id
@vote.user_id == current_user.id
Vote.exists?(:user_id => current_user.id)
c
n
c
Vote.exists?(:user_id => current_user.id) && @vote.user_id == current_user.id
c
Vote.exists?(:user_id => current_user.id)
Vote.exists?(user_id == current_user.id)
Vote.exists?(current_user.id)
Vote.all.exists?(current_user.id)
Vote.all.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.all.exists?
!Vote.exists?(current_user.id)
Vote.exists?(current_user.id)
!Vote.exists?(current_user.id) && @vote.user_id == current_user.id
c
!Vote.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
!!Vote.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
@vote.user_id == current_user.id
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
@vote
@vote.user_id == current_user.id
Vote.exists?(current_user.id)
c
Vote.exists?(current_user.id) && @vote.user_id == current_user.id
Vote.exists?(current_user.id)
c
params
c
params
c
params
c
exit
c
@vote
c
@vote
@skill
c
@vote
c
@vote
@skill
@user
c
current_user.tag_list
current_user.skill_list
c
current_user.skills_list.count
current_user.skill_list.count
current_user.skill.count
current_user.skills.count
current_user.skills
current_user.skill
current_user.skill_list
c
current_user.skill_list
current_user.skills_list
current_user.tag_list
current_user
c
params
c
params
